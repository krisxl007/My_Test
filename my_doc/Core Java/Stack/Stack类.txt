Stack类继承了Vector类，Vector类底层是一个Object数组，数组的大小是jdk动态扩大的，当没有指定大小时的默认大小为10，当需要动态
扩大数组长度时，就新new一个更大的数组并把原有数据拷贝到新数组中。Stack最主要的几个方法push,pop,peek的实现如下:

push:把元素压入栈顶
    public E push(E item) {
        addElement(item);

        return item;
    }

pop:弹出栈顶元素并从栈中移除
    public synchronized E pop() {
        E       obj;
        int     len = size();

        obj = peek();  //调用peek()方法获取栈顶元素
        removeElementAt(len - 1);  //移除栈顶元素

        return obj;
    }

peek:获取栈顶元素(不移除)
    public synchronized E peek() {
        int     len = size();

        if (len == 0)
            throw new EmptyStackException();
        return elementAt(len - 1);  //返回栈顶元素
    }

==============================================================

JDK中的Stack有个最大的问题就是采用了数组来实现，所以要考虑到数组大小的问题，效率会有影响，所以更有效率的方法是可以采用链栈来
实现，继承JDK的LinkedList就可以轻松实现。