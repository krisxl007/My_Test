1.hamcrest: 一个增强Junit测试功能的框架，增加了很多断言方法。
2.testSuite: 一个自动化测试框架，可以写一个Suite类，把所有测试方法放进去自动化执行。已被Maven的自动化测试取代。
3.TDD: 测试驱动开发。把所有可能出现的分支先写成测试方法，然后再根据测试方法进行开发。

准备测试数据框架：
1.stub： 测试数据放在一个collection中，如Map，List等
2.dbunit: 测试数据准备在一份xml文件中,测试方法读取该xml文件来插入数据库。但是dbunit的方式需要在测试方法前自己
	  备份数据库，测试方法后还原数据库，用来确保数据库的资料没有受到影响。
3.easyMock: 如果Dao模块没开发完成但是需要测试Service模块时，可以用easyMock来模拟一个Dao接口的虚拟对象，来返回
	    给Service。如Service需要测试Dao的load()方法返回一个user对象，可以用下面方法活得一个Dao的返回对象：

	    //创建一个Dao的Mock对象
	    UserDao userDao = EasyMock.createMock(UserDao.class);
	    User user = new User(1,"admin","123");
	    EasyMock.expect(userDao.load("admin")).andReturn(user) //当调用Dao的load方法时返回一个user对象

	    //进入测试
	    EasyMock.reply(userDao); //进入测试
	    UserService userService = new UserService(userDao); //创建Service与Dao的关联

	    //测试
	    User u = userService.load("admin");
	    assertTrue(user,u);